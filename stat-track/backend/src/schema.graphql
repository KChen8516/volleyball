# Prisma has an import workflow that's not graphql standard.
# This allows us to not repeat typing existing types
# import * from './generated/prisma.graphql'

# custom frontend type
type SuccessMessage {
  message: String
}

type Mutation {
  createPlayer(
    number: String!
    position: String!
    firstName: String!
    lastName: String!
    team: String!
  ): Player!
  updatePlayer(
    id: ID!
    number: String
    position: String
    firstName: String
    lastName: String
    team: String
  ): Player
  deletePlayer(id: ID!): Player
  createTeam(city: String, name: String!): Team
  signup(email: String!, password: String!, name: String!): User!
  signin(email: String!, password: String!): User!
  # custom type
  signout: SuccessMessage
  createGame(homeTeamId: ID!, opposingTeam: String, homeTeam: String): Game!
  updateGame(
    id: ID!
    homeScore: String
    opponentScore: String
    stats: [StatCreateWithoutGameInput]!
  ): Game
}

type Query {
  players: [Player]!
  # similar to (id: ID!)
  player(where: PlayerWhereUniqueInput!): Player
  # check for logged in user
  me: User
  teams: [Team]!
  # array is required but can be empty
  users: [User]!
  team(where: TeamWhereUniqueInput!): Team
  games: [Game]!
  game(where: GameWhereUniqueInput!): Game
  stats: [Stat]!
}
