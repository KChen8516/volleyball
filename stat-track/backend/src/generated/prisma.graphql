# source: https://us1.prisma.sh/kai-chen-2ef5a9/volley-track/dev
# timestamp: Sat Sep 07 2019 17:56:14 GMT-0700 (Pacific Daylight Time)

type AggregateGame {
  count: Int!
}

type AggregatePlayer {
  count: Int!
}

type AggregateStat {
  count: Int!
}

type AggregateTeam {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

scalar DateTime

type Game implements Node {
  id: ID!
  homeTeamId: ID!
  stats(where: StatWhereInput, orderBy: StatOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Stat!]
  user: User
  opposingTeam: String
  homeTeam: String
  homeScore: String
  opponentScore: String
  createdAt: DateTime
  updateAt: DateTime
}

"""A connection to a list of items."""
type GameConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [GameEdge]!
  aggregate: AggregateGame!
}

input GameCreateInput {
  id: ID
  homeTeamId: ID!
  opposingTeam: String
  homeTeam: String
  homeScore: String
  opponentScore: String
  updateAt: DateTime
  stats: StatCreateManyWithoutGameInput
  user: UserCreateOneInput
}

input GameCreateOneWithoutStatsInput {
  create: GameCreateWithoutStatsInput
  connect: GameWhereUniqueInput
}

input GameCreateWithoutStatsInput {
  id: ID
  homeTeamId: ID!
  opposingTeam: String
  homeTeam: String
  homeScore: String
  opponentScore: String
  updateAt: DateTime
  user: UserCreateOneInput
}

"""An edge in a connection."""
type GameEdge {
  """The item at the end of the edge."""
  node: Game!

  """A cursor for use in pagination."""
  cursor: String!
}

enum GameOrderByInput {
  id_ASC
  id_DESC
  homeTeamId_ASC
  homeTeamId_DESC
  opposingTeam_ASC
  opposingTeam_DESC
  homeTeam_ASC
  homeTeam_DESC
  homeScore_ASC
  homeScore_DESC
  opponentScore_ASC
  opponentScore_DESC
  createdAt_ASC
  createdAt_DESC
  updateAt_ASC
  updateAt_DESC
}

type GamePreviousValues {
  id: ID!
  homeTeamId: ID!
  opposingTeam: String
  homeTeam: String
  homeScore: String
  opponentScore: String
  createdAt: DateTime
  updateAt: DateTime
}

type GameSubscriptionPayload {
  mutation: MutationType!
  node: Game
  updatedFields: [String!]
  previousValues: GamePreviousValues
}

input GameSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [GameSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [GameSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [GameSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: GameWhereInput
}

input GameUpdateInput {
  homeTeamId: ID
  opposingTeam: String
  homeTeam: String
  homeScore: String
  opponentScore: String
  updateAt: DateTime
  stats: StatUpdateManyWithoutGameInput
  user: UserUpdateOneInput
}

input GameUpdateManyMutationInput {
  homeTeamId: ID
  opposingTeam: String
  homeTeam: String
  homeScore: String
  opponentScore: String
  updateAt: DateTime
}

input GameUpdateOneRequiredWithoutStatsInput {
  create: GameCreateWithoutStatsInput
  connect: GameWhereUniqueInput
  update: GameUpdateWithoutStatsDataInput
  upsert: GameUpsertWithoutStatsInput
}

input GameUpdateWithoutStatsDataInput {
  homeTeamId: ID
  opposingTeam: String
  homeTeam: String
  homeScore: String
  opponentScore: String
  updateAt: DateTime
  user: UserUpdateOneInput
}

input GameUpsertWithoutStatsInput {
  update: GameUpdateWithoutStatsDataInput!
  create: GameCreateWithoutStatsInput!
}

input GameWhereInput {
  """Logical AND on all given filters."""
  AND: [GameWhereInput!]

  """Logical OR on all given filters."""
  OR: [GameWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [GameWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  homeTeamId: ID

  """All values that are not equal to given value."""
  homeTeamId_not: ID

  """All values that are contained in given list."""
  homeTeamId_in: [ID!]

  """All values that are not contained in given list."""
  homeTeamId_not_in: [ID!]

  """All values less than the given value."""
  homeTeamId_lt: ID

  """All values less than or equal the given value."""
  homeTeamId_lte: ID

  """All values greater than the given value."""
  homeTeamId_gt: ID

  """All values greater than or equal the given value."""
  homeTeamId_gte: ID

  """All values containing the given string."""
  homeTeamId_contains: ID

  """All values not containing the given string."""
  homeTeamId_not_contains: ID

  """All values starting with the given string."""
  homeTeamId_starts_with: ID

  """All values not starting with the given string."""
  homeTeamId_not_starts_with: ID

  """All values ending with the given string."""
  homeTeamId_ends_with: ID

  """All values not ending with the given string."""
  homeTeamId_not_ends_with: ID
  opposingTeam: String

  """All values that are not equal to given value."""
  opposingTeam_not: String

  """All values that are contained in given list."""
  opposingTeam_in: [String!]

  """All values that are not contained in given list."""
  opposingTeam_not_in: [String!]

  """All values less than the given value."""
  opposingTeam_lt: String

  """All values less than or equal the given value."""
  opposingTeam_lte: String

  """All values greater than the given value."""
  opposingTeam_gt: String

  """All values greater than or equal the given value."""
  opposingTeam_gte: String

  """All values containing the given string."""
  opposingTeam_contains: String

  """All values not containing the given string."""
  opposingTeam_not_contains: String

  """All values starting with the given string."""
  opposingTeam_starts_with: String

  """All values not starting with the given string."""
  opposingTeam_not_starts_with: String

  """All values ending with the given string."""
  opposingTeam_ends_with: String

  """All values not ending with the given string."""
  opposingTeam_not_ends_with: String
  homeTeam: String

  """All values that are not equal to given value."""
  homeTeam_not: String

  """All values that are contained in given list."""
  homeTeam_in: [String!]

  """All values that are not contained in given list."""
  homeTeam_not_in: [String!]

  """All values less than the given value."""
  homeTeam_lt: String

  """All values less than or equal the given value."""
  homeTeam_lte: String

  """All values greater than the given value."""
  homeTeam_gt: String

  """All values greater than or equal the given value."""
  homeTeam_gte: String

  """All values containing the given string."""
  homeTeam_contains: String

  """All values not containing the given string."""
  homeTeam_not_contains: String

  """All values starting with the given string."""
  homeTeam_starts_with: String

  """All values not starting with the given string."""
  homeTeam_not_starts_with: String

  """All values ending with the given string."""
  homeTeam_ends_with: String

  """All values not ending with the given string."""
  homeTeam_not_ends_with: String
  homeScore: String

  """All values that are not equal to given value."""
  homeScore_not: String

  """All values that are contained in given list."""
  homeScore_in: [String!]

  """All values that are not contained in given list."""
  homeScore_not_in: [String!]

  """All values less than the given value."""
  homeScore_lt: String

  """All values less than or equal the given value."""
  homeScore_lte: String

  """All values greater than the given value."""
  homeScore_gt: String

  """All values greater than or equal the given value."""
  homeScore_gte: String

  """All values containing the given string."""
  homeScore_contains: String

  """All values not containing the given string."""
  homeScore_not_contains: String

  """All values starting with the given string."""
  homeScore_starts_with: String

  """All values not starting with the given string."""
  homeScore_not_starts_with: String

  """All values ending with the given string."""
  homeScore_ends_with: String

  """All values not ending with the given string."""
  homeScore_not_ends_with: String
  opponentScore: String

  """All values that are not equal to given value."""
  opponentScore_not: String

  """All values that are contained in given list."""
  opponentScore_in: [String!]

  """All values that are not contained in given list."""
  opponentScore_not_in: [String!]

  """All values less than the given value."""
  opponentScore_lt: String

  """All values less than or equal the given value."""
  opponentScore_lte: String

  """All values greater than the given value."""
  opponentScore_gt: String

  """All values greater than or equal the given value."""
  opponentScore_gte: String

  """All values containing the given string."""
  opponentScore_contains: String

  """All values not containing the given string."""
  opponentScore_not_contains: String

  """All values starting with the given string."""
  opponentScore_starts_with: String

  """All values not starting with the given string."""
  opponentScore_not_starts_with: String

  """All values ending with the given string."""
  opponentScore_ends_with: String

  """All values not ending with the given string."""
  opponentScore_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updateAt: DateTime

  """All values that are not equal to given value."""
  updateAt_not: DateTime

  """All values that are contained in given list."""
  updateAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updateAt_not_in: [DateTime!]

  """All values less than the given value."""
  updateAt_lt: DateTime

  """All values less than or equal the given value."""
  updateAt_lte: DateTime

  """All values greater than the given value."""
  updateAt_gt: DateTime

  """All values greater than or equal the given value."""
  updateAt_gte: DateTime
  stats_every: StatWhereInput
  stats_some: StatWhereInput
  stats_none: StatWhereInput
  user: UserWhereInput
}

input GameWhereUniqueInput {
  id: ID
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createPlayer(data: PlayerCreateInput!): Player!
  createTeam(data: TeamCreateInput!): Team!
  createGame(data: GameCreateInput!): Game!
  createStat(data: StatCreateInput!): Stat!
  createUser(data: UserCreateInput!): User!
  updatePlayer(data: PlayerUpdateInput!, where: PlayerWhereUniqueInput!): Player
  updateTeam(data: TeamUpdateInput!, where: TeamWhereUniqueInput!): Team
  updateGame(data: GameUpdateInput!, where: GameWhereUniqueInput!): Game
  updateStat(data: StatUpdateInput!, where: StatWhereUniqueInput!): Stat
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  deletePlayer(where: PlayerWhereUniqueInput!): Player
  deleteTeam(where: TeamWhereUniqueInput!): Team
  deleteGame(where: GameWhereUniqueInput!): Game
  deleteStat(where: StatWhereUniqueInput!): Stat
  deleteUser(where: UserWhereUniqueInput!): User
  upsertPlayer(where: PlayerWhereUniqueInput!, create: PlayerCreateInput!, update: PlayerUpdateInput!): Player!
  upsertTeam(where: TeamWhereUniqueInput!, create: TeamCreateInput!, update: TeamUpdateInput!): Team!
  upsertGame(where: GameWhereUniqueInput!, create: GameCreateInput!, update: GameUpdateInput!): Game!
  upsertStat(where: StatWhereUniqueInput!, create: StatCreateInput!, update: StatUpdateInput!): Stat!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  updateManyPlayers(data: PlayerUpdateManyMutationInput!, where: PlayerWhereInput): BatchPayload!
  updateManyTeams(data: TeamUpdateManyMutationInput!, where: TeamWhereInput): BatchPayload!
  updateManyGames(data: GameUpdateManyMutationInput!, where: GameWhereInput): BatchPayload!
  updateManyStats(data: StatUpdateManyMutationInput!, where: StatWhereInput): BatchPayload!
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  deleteManyPlayers(where: PlayerWhereInput): BatchPayload!
  deleteManyTeams(where: TeamWhereInput): BatchPayload!
  deleteManyGames(where: GameWhereInput): BatchPayload!
  deleteManyStats(where: StatWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

enum Permission {
  ADMIN
  USER
  PERMISSIONUPDATE
  PLAYERCREATE
  PLAYERUPDATE
  PLAYERDELETE
  TEAMCREATE
  TEAMUPDATE
  TEAMDELETE
}

type Player implements Node {
  id: ID!
  number: String!
  position: String!
  firstName: String!
  lastName: String!
  image: String
  createdAt: DateTime
  updateAt: DateTime
  user: User!
  team: Team!
}

"""A connection to a list of items."""
type PlayerConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [PlayerEdge]!
  aggregate: AggregatePlayer!
}

input PlayerCreateInput {
  id: ID
  number: String!
  position: String!
  firstName: String!
  lastName: String!
  image: String
  updateAt: DateTime
  user: UserCreateOneInput!
  team: TeamCreateOneWithoutPlayersInput!
}

input PlayerCreateManyWithoutTeamInput {
  create: [PlayerCreateWithoutTeamInput!]
  connect: [PlayerWhereUniqueInput!]
}

input PlayerCreateWithoutTeamInput {
  id: ID
  number: String!
  position: String!
  firstName: String!
  lastName: String!
  image: String
  updateAt: DateTime
  user: UserCreateOneInput!
}

"""An edge in a connection."""
type PlayerEdge {
  """The item at the end of the edge."""
  node: Player!

  """A cursor for use in pagination."""
  cursor: String!
}

enum PlayerOrderByInput {
  id_ASC
  id_DESC
  number_ASC
  number_DESC
  position_ASC
  position_DESC
  firstName_ASC
  firstName_DESC
  lastName_ASC
  lastName_DESC
  image_ASC
  image_DESC
  createdAt_ASC
  createdAt_DESC
  updateAt_ASC
  updateAt_DESC
}

type PlayerPreviousValues {
  id: ID!
  number: String!
  position: String!
  firstName: String!
  lastName: String!
  image: String
  createdAt: DateTime
  updateAt: DateTime
}

input PlayerScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [PlayerScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [PlayerScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PlayerScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  number: String

  """All values that are not equal to given value."""
  number_not: String

  """All values that are contained in given list."""
  number_in: [String!]

  """All values that are not contained in given list."""
  number_not_in: [String!]

  """All values less than the given value."""
  number_lt: String

  """All values less than or equal the given value."""
  number_lte: String

  """All values greater than the given value."""
  number_gt: String

  """All values greater than or equal the given value."""
  number_gte: String

  """All values containing the given string."""
  number_contains: String

  """All values not containing the given string."""
  number_not_contains: String

  """All values starting with the given string."""
  number_starts_with: String

  """All values not starting with the given string."""
  number_not_starts_with: String

  """All values ending with the given string."""
  number_ends_with: String

  """All values not ending with the given string."""
  number_not_ends_with: String
  position: String

  """All values that are not equal to given value."""
  position_not: String

  """All values that are contained in given list."""
  position_in: [String!]

  """All values that are not contained in given list."""
  position_not_in: [String!]

  """All values less than the given value."""
  position_lt: String

  """All values less than or equal the given value."""
  position_lte: String

  """All values greater than the given value."""
  position_gt: String

  """All values greater than or equal the given value."""
  position_gte: String

  """All values containing the given string."""
  position_contains: String

  """All values not containing the given string."""
  position_not_contains: String

  """All values starting with the given string."""
  position_starts_with: String

  """All values not starting with the given string."""
  position_not_starts_with: String

  """All values ending with the given string."""
  position_ends_with: String

  """All values not ending with the given string."""
  position_not_ends_with: String
  firstName: String

  """All values that are not equal to given value."""
  firstName_not: String

  """All values that are contained in given list."""
  firstName_in: [String!]

  """All values that are not contained in given list."""
  firstName_not_in: [String!]

  """All values less than the given value."""
  firstName_lt: String

  """All values less than or equal the given value."""
  firstName_lte: String

  """All values greater than the given value."""
  firstName_gt: String

  """All values greater than or equal the given value."""
  firstName_gte: String

  """All values containing the given string."""
  firstName_contains: String

  """All values not containing the given string."""
  firstName_not_contains: String

  """All values starting with the given string."""
  firstName_starts_with: String

  """All values not starting with the given string."""
  firstName_not_starts_with: String

  """All values ending with the given string."""
  firstName_ends_with: String

  """All values not ending with the given string."""
  firstName_not_ends_with: String
  lastName: String

  """All values that are not equal to given value."""
  lastName_not: String

  """All values that are contained in given list."""
  lastName_in: [String!]

  """All values that are not contained in given list."""
  lastName_not_in: [String!]

  """All values less than the given value."""
  lastName_lt: String

  """All values less than or equal the given value."""
  lastName_lte: String

  """All values greater than the given value."""
  lastName_gt: String

  """All values greater than or equal the given value."""
  lastName_gte: String

  """All values containing the given string."""
  lastName_contains: String

  """All values not containing the given string."""
  lastName_not_contains: String

  """All values starting with the given string."""
  lastName_starts_with: String

  """All values not starting with the given string."""
  lastName_not_starts_with: String

  """All values ending with the given string."""
  lastName_ends_with: String

  """All values not ending with the given string."""
  lastName_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updateAt: DateTime

  """All values that are not equal to given value."""
  updateAt_not: DateTime

  """All values that are contained in given list."""
  updateAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updateAt_not_in: [DateTime!]

  """All values less than the given value."""
  updateAt_lt: DateTime

  """All values less than or equal the given value."""
  updateAt_lte: DateTime

  """All values greater than the given value."""
  updateAt_gt: DateTime

  """All values greater than or equal the given value."""
  updateAt_gte: DateTime
}

type PlayerSubscriptionPayload {
  mutation: MutationType!
  node: Player
  updatedFields: [String!]
  previousValues: PlayerPreviousValues
}

input PlayerSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [PlayerSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [PlayerSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PlayerSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: PlayerWhereInput
}

input PlayerUpdateInput {
  number: String
  position: String
  firstName: String
  lastName: String
  image: String
  updateAt: DateTime
  user: UserUpdateOneRequiredInput
  team: TeamUpdateOneRequiredWithoutPlayersInput
}

input PlayerUpdateManyDataInput {
  number: String
  position: String
  firstName: String
  lastName: String
  image: String
  updateAt: DateTime
}

input PlayerUpdateManyMutationInput {
  number: String
  position: String
  firstName: String
  lastName: String
  image: String
  updateAt: DateTime
}

input PlayerUpdateManyWithoutTeamInput {
  create: [PlayerCreateWithoutTeamInput!]
  connect: [PlayerWhereUniqueInput!]
  set: [PlayerWhereUniqueInput!]
  disconnect: [PlayerWhereUniqueInput!]
  delete: [PlayerWhereUniqueInput!]
  update: [PlayerUpdateWithWhereUniqueWithoutTeamInput!]
  updateMany: [PlayerUpdateManyWithWhereNestedInput!]
  deleteMany: [PlayerScalarWhereInput!]
  upsert: [PlayerUpsertWithWhereUniqueWithoutTeamInput!]
}

input PlayerUpdateManyWithWhereNestedInput {
  where: PlayerScalarWhereInput!
  data: PlayerUpdateManyDataInput!
}

input PlayerUpdateWithoutTeamDataInput {
  number: String
  position: String
  firstName: String
  lastName: String
  image: String
  updateAt: DateTime
  user: UserUpdateOneRequiredInput
}

input PlayerUpdateWithWhereUniqueWithoutTeamInput {
  where: PlayerWhereUniqueInput!
  data: PlayerUpdateWithoutTeamDataInput!
}

input PlayerUpsertWithWhereUniqueWithoutTeamInput {
  where: PlayerWhereUniqueInput!
  update: PlayerUpdateWithoutTeamDataInput!
  create: PlayerCreateWithoutTeamInput!
}

input PlayerWhereInput {
  """Logical AND on all given filters."""
  AND: [PlayerWhereInput!]

  """Logical OR on all given filters."""
  OR: [PlayerWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PlayerWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  number: String

  """All values that are not equal to given value."""
  number_not: String

  """All values that are contained in given list."""
  number_in: [String!]

  """All values that are not contained in given list."""
  number_not_in: [String!]

  """All values less than the given value."""
  number_lt: String

  """All values less than or equal the given value."""
  number_lte: String

  """All values greater than the given value."""
  number_gt: String

  """All values greater than or equal the given value."""
  number_gte: String

  """All values containing the given string."""
  number_contains: String

  """All values not containing the given string."""
  number_not_contains: String

  """All values starting with the given string."""
  number_starts_with: String

  """All values not starting with the given string."""
  number_not_starts_with: String

  """All values ending with the given string."""
  number_ends_with: String

  """All values not ending with the given string."""
  number_not_ends_with: String
  position: String

  """All values that are not equal to given value."""
  position_not: String

  """All values that are contained in given list."""
  position_in: [String!]

  """All values that are not contained in given list."""
  position_not_in: [String!]

  """All values less than the given value."""
  position_lt: String

  """All values less than or equal the given value."""
  position_lte: String

  """All values greater than the given value."""
  position_gt: String

  """All values greater than or equal the given value."""
  position_gte: String

  """All values containing the given string."""
  position_contains: String

  """All values not containing the given string."""
  position_not_contains: String

  """All values starting with the given string."""
  position_starts_with: String

  """All values not starting with the given string."""
  position_not_starts_with: String

  """All values ending with the given string."""
  position_ends_with: String

  """All values not ending with the given string."""
  position_not_ends_with: String
  firstName: String

  """All values that are not equal to given value."""
  firstName_not: String

  """All values that are contained in given list."""
  firstName_in: [String!]

  """All values that are not contained in given list."""
  firstName_not_in: [String!]

  """All values less than the given value."""
  firstName_lt: String

  """All values less than or equal the given value."""
  firstName_lte: String

  """All values greater than the given value."""
  firstName_gt: String

  """All values greater than or equal the given value."""
  firstName_gte: String

  """All values containing the given string."""
  firstName_contains: String

  """All values not containing the given string."""
  firstName_not_contains: String

  """All values starting with the given string."""
  firstName_starts_with: String

  """All values not starting with the given string."""
  firstName_not_starts_with: String

  """All values ending with the given string."""
  firstName_ends_with: String

  """All values not ending with the given string."""
  firstName_not_ends_with: String
  lastName: String

  """All values that are not equal to given value."""
  lastName_not: String

  """All values that are contained in given list."""
  lastName_in: [String!]

  """All values that are not contained in given list."""
  lastName_not_in: [String!]

  """All values less than the given value."""
  lastName_lt: String

  """All values less than or equal the given value."""
  lastName_lte: String

  """All values greater than the given value."""
  lastName_gt: String

  """All values greater than or equal the given value."""
  lastName_gte: String

  """All values containing the given string."""
  lastName_contains: String

  """All values not containing the given string."""
  lastName_not_contains: String

  """All values starting with the given string."""
  lastName_starts_with: String

  """All values not starting with the given string."""
  lastName_not_starts_with: String

  """All values ending with the given string."""
  lastName_ends_with: String

  """All values not ending with the given string."""
  lastName_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updateAt: DateTime

  """All values that are not equal to given value."""
  updateAt_not: DateTime

  """All values that are contained in given list."""
  updateAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updateAt_not_in: [DateTime!]

  """All values less than the given value."""
  updateAt_lt: DateTime

  """All values less than or equal the given value."""
  updateAt_lte: DateTime

  """All values greater than the given value."""
  updateAt_gt: DateTime

  """All values greater than or equal the given value."""
  updateAt_gte: DateTime
  user: UserWhereInput
  team: TeamWhereInput
}

input PlayerWhereUniqueInput {
  id: ID
}

type Query {
  players(where: PlayerWhereInput, orderBy: PlayerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Player]!
  teams(where: TeamWhereInput, orderBy: TeamOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Team]!
  games(where: GameWhereInput, orderBy: GameOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Game]!
  stats(where: StatWhereInput, orderBy: StatOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Stat]!
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  player(where: PlayerWhereUniqueInput!): Player
  team(where: TeamWhereUniqueInput!): Team
  game(where: GameWhereUniqueInput!): Game
  stat(where: StatWhereUniqueInput!): Stat
  user(where: UserWhereUniqueInput!): User
  playersConnection(where: PlayerWhereInput, orderBy: PlayerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PlayerConnection!
  teamsConnection(where: TeamWhereInput, orderBy: TeamOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TeamConnection!
  gamesConnection(where: GameWhereInput, orderBy: GameOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GameConnection!
  statsConnection(where: StatWhereInput, orderBy: StatOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): StatConnection!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Stat implements Node {
  id: ID!
  game: Game!
  player: String!
  team: String!
  action: String!
  result: String!
  playerName: String
  createdAt: DateTime
  updateAt: DateTime
}

"""A connection to a list of items."""
type StatConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [StatEdge]!
  aggregate: AggregateStat!
}

input StatCreateInput {
  id: ID
  player: String!
  team: String!
  action: String!
  result: String!
  playerName: String
  updateAt: DateTime
  game: GameCreateOneWithoutStatsInput!
}

input StatCreateManyWithoutGameInput {
  create: [StatCreateWithoutGameInput!]
  connect: [StatWhereUniqueInput!]
}

input StatCreateWithoutGameInput {
  id: ID
  player: String!
  team: String!
  action: String!
  result: String!
  playerName: String
  updateAt: DateTime
}

"""An edge in a connection."""
type StatEdge {
  """The item at the end of the edge."""
  node: Stat!

  """A cursor for use in pagination."""
  cursor: String!
}

enum StatOrderByInput {
  id_ASC
  id_DESC
  player_ASC
  player_DESC
  team_ASC
  team_DESC
  action_ASC
  action_DESC
  result_ASC
  result_DESC
  playerName_ASC
  playerName_DESC
  createdAt_ASC
  createdAt_DESC
  updateAt_ASC
  updateAt_DESC
}

type StatPreviousValues {
  id: ID!
  player: String!
  team: String!
  action: String!
  result: String!
  playerName: String
  createdAt: DateTime
  updateAt: DateTime
}

input StatScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [StatScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [StatScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [StatScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  player: String

  """All values that are not equal to given value."""
  player_not: String

  """All values that are contained in given list."""
  player_in: [String!]

  """All values that are not contained in given list."""
  player_not_in: [String!]

  """All values less than the given value."""
  player_lt: String

  """All values less than or equal the given value."""
  player_lte: String

  """All values greater than the given value."""
  player_gt: String

  """All values greater than or equal the given value."""
  player_gte: String

  """All values containing the given string."""
  player_contains: String

  """All values not containing the given string."""
  player_not_contains: String

  """All values starting with the given string."""
  player_starts_with: String

  """All values not starting with the given string."""
  player_not_starts_with: String

  """All values ending with the given string."""
  player_ends_with: String

  """All values not ending with the given string."""
  player_not_ends_with: String
  team: String

  """All values that are not equal to given value."""
  team_not: String

  """All values that are contained in given list."""
  team_in: [String!]

  """All values that are not contained in given list."""
  team_not_in: [String!]

  """All values less than the given value."""
  team_lt: String

  """All values less than or equal the given value."""
  team_lte: String

  """All values greater than the given value."""
  team_gt: String

  """All values greater than or equal the given value."""
  team_gte: String

  """All values containing the given string."""
  team_contains: String

  """All values not containing the given string."""
  team_not_contains: String

  """All values starting with the given string."""
  team_starts_with: String

  """All values not starting with the given string."""
  team_not_starts_with: String

  """All values ending with the given string."""
  team_ends_with: String

  """All values not ending with the given string."""
  team_not_ends_with: String
  action: String

  """All values that are not equal to given value."""
  action_not: String

  """All values that are contained in given list."""
  action_in: [String!]

  """All values that are not contained in given list."""
  action_not_in: [String!]

  """All values less than the given value."""
  action_lt: String

  """All values less than or equal the given value."""
  action_lte: String

  """All values greater than the given value."""
  action_gt: String

  """All values greater than or equal the given value."""
  action_gte: String

  """All values containing the given string."""
  action_contains: String

  """All values not containing the given string."""
  action_not_contains: String

  """All values starting with the given string."""
  action_starts_with: String

  """All values not starting with the given string."""
  action_not_starts_with: String

  """All values ending with the given string."""
  action_ends_with: String

  """All values not ending with the given string."""
  action_not_ends_with: String
  result: String

  """All values that are not equal to given value."""
  result_not: String

  """All values that are contained in given list."""
  result_in: [String!]

  """All values that are not contained in given list."""
  result_not_in: [String!]

  """All values less than the given value."""
  result_lt: String

  """All values less than or equal the given value."""
  result_lte: String

  """All values greater than the given value."""
  result_gt: String

  """All values greater than or equal the given value."""
  result_gte: String

  """All values containing the given string."""
  result_contains: String

  """All values not containing the given string."""
  result_not_contains: String

  """All values starting with the given string."""
  result_starts_with: String

  """All values not starting with the given string."""
  result_not_starts_with: String

  """All values ending with the given string."""
  result_ends_with: String

  """All values not ending with the given string."""
  result_not_ends_with: String
  playerName: String

  """All values that are not equal to given value."""
  playerName_not: String

  """All values that are contained in given list."""
  playerName_in: [String!]

  """All values that are not contained in given list."""
  playerName_not_in: [String!]

  """All values less than the given value."""
  playerName_lt: String

  """All values less than or equal the given value."""
  playerName_lte: String

  """All values greater than the given value."""
  playerName_gt: String

  """All values greater than or equal the given value."""
  playerName_gte: String

  """All values containing the given string."""
  playerName_contains: String

  """All values not containing the given string."""
  playerName_not_contains: String

  """All values starting with the given string."""
  playerName_starts_with: String

  """All values not starting with the given string."""
  playerName_not_starts_with: String

  """All values ending with the given string."""
  playerName_ends_with: String

  """All values not ending with the given string."""
  playerName_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updateAt: DateTime

  """All values that are not equal to given value."""
  updateAt_not: DateTime

  """All values that are contained in given list."""
  updateAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updateAt_not_in: [DateTime!]

  """All values less than the given value."""
  updateAt_lt: DateTime

  """All values less than or equal the given value."""
  updateAt_lte: DateTime

  """All values greater than the given value."""
  updateAt_gt: DateTime

  """All values greater than or equal the given value."""
  updateAt_gte: DateTime
}

type StatSubscriptionPayload {
  mutation: MutationType!
  node: Stat
  updatedFields: [String!]
  previousValues: StatPreviousValues
}

input StatSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [StatSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [StatSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [StatSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: StatWhereInput
}

input StatUpdateInput {
  player: String
  team: String
  action: String
  result: String
  playerName: String
  updateAt: DateTime
  game: GameUpdateOneRequiredWithoutStatsInput
}

input StatUpdateManyDataInput {
  player: String
  team: String
  action: String
  result: String
  playerName: String
  updateAt: DateTime
}

input StatUpdateManyMutationInput {
  player: String
  team: String
  action: String
  result: String
  playerName: String
  updateAt: DateTime
}

input StatUpdateManyWithoutGameInput {
  create: [StatCreateWithoutGameInput!]
  connect: [StatWhereUniqueInput!]
  set: [StatWhereUniqueInput!]
  disconnect: [StatWhereUniqueInput!]
  delete: [StatWhereUniqueInput!]
  update: [StatUpdateWithWhereUniqueWithoutGameInput!]
  updateMany: [StatUpdateManyWithWhereNestedInput!]
  deleteMany: [StatScalarWhereInput!]
  upsert: [StatUpsertWithWhereUniqueWithoutGameInput!]
}

input StatUpdateManyWithWhereNestedInput {
  where: StatScalarWhereInput!
  data: StatUpdateManyDataInput!
}

input StatUpdateWithoutGameDataInput {
  player: String
  team: String
  action: String
  result: String
  playerName: String
  updateAt: DateTime
}

input StatUpdateWithWhereUniqueWithoutGameInput {
  where: StatWhereUniqueInput!
  data: StatUpdateWithoutGameDataInput!
}

input StatUpsertWithWhereUniqueWithoutGameInput {
  where: StatWhereUniqueInput!
  update: StatUpdateWithoutGameDataInput!
  create: StatCreateWithoutGameInput!
}

input StatWhereInput {
  """Logical AND on all given filters."""
  AND: [StatWhereInput!]

  """Logical OR on all given filters."""
  OR: [StatWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [StatWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  player: String

  """All values that are not equal to given value."""
  player_not: String

  """All values that are contained in given list."""
  player_in: [String!]

  """All values that are not contained in given list."""
  player_not_in: [String!]

  """All values less than the given value."""
  player_lt: String

  """All values less than or equal the given value."""
  player_lte: String

  """All values greater than the given value."""
  player_gt: String

  """All values greater than or equal the given value."""
  player_gte: String

  """All values containing the given string."""
  player_contains: String

  """All values not containing the given string."""
  player_not_contains: String

  """All values starting with the given string."""
  player_starts_with: String

  """All values not starting with the given string."""
  player_not_starts_with: String

  """All values ending with the given string."""
  player_ends_with: String

  """All values not ending with the given string."""
  player_not_ends_with: String
  team: String

  """All values that are not equal to given value."""
  team_not: String

  """All values that are contained in given list."""
  team_in: [String!]

  """All values that are not contained in given list."""
  team_not_in: [String!]

  """All values less than the given value."""
  team_lt: String

  """All values less than or equal the given value."""
  team_lte: String

  """All values greater than the given value."""
  team_gt: String

  """All values greater than or equal the given value."""
  team_gte: String

  """All values containing the given string."""
  team_contains: String

  """All values not containing the given string."""
  team_not_contains: String

  """All values starting with the given string."""
  team_starts_with: String

  """All values not starting with the given string."""
  team_not_starts_with: String

  """All values ending with the given string."""
  team_ends_with: String

  """All values not ending with the given string."""
  team_not_ends_with: String
  action: String

  """All values that are not equal to given value."""
  action_not: String

  """All values that are contained in given list."""
  action_in: [String!]

  """All values that are not contained in given list."""
  action_not_in: [String!]

  """All values less than the given value."""
  action_lt: String

  """All values less than or equal the given value."""
  action_lte: String

  """All values greater than the given value."""
  action_gt: String

  """All values greater than or equal the given value."""
  action_gte: String

  """All values containing the given string."""
  action_contains: String

  """All values not containing the given string."""
  action_not_contains: String

  """All values starting with the given string."""
  action_starts_with: String

  """All values not starting with the given string."""
  action_not_starts_with: String

  """All values ending with the given string."""
  action_ends_with: String

  """All values not ending with the given string."""
  action_not_ends_with: String
  result: String

  """All values that are not equal to given value."""
  result_not: String

  """All values that are contained in given list."""
  result_in: [String!]

  """All values that are not contained in given list."""
  result_not_in: [String!]

  """All values less than the given value."""
  result_lt: String

  """All values less than or equal the given value."""
  result_lte: String

  """All values greater than the given value."""
  result_gt: String

  """All values greater than or equal the given value."""
  result_gte: String

  """All values containing the given string."""
  result_contains: String

  """All values not containing the given string."""
  result_not_contains: String

  """All values starting with the given string."""
  result_starts_with: String

  """All values not starting with the given string."""
  result_not_starts_with: String

  """All values ending with the given string."""
  result_ends_with: String

  """All values not ending with the given string."""
  result_not_ends_with: String
  playerName: String

  """All values that are not equal to given value."""
  playerName_not: String

  """All values that are contained in given list."""
  playerName_in: [String!]

  """All values that are not contained in given list."""
  playerName_not_in: [String!]

  """All values less than the given value."""
  playerName_lt: String

  """All values less than or equal the given value."""
  playerName_lte: String

  """All values greater than the given value."""
  playerName_gt: String

  """All values greater than or equal the given value."""
  playerName_gte: String

  """All values containing the given string."""
  playerName_contains: String

  """All values not containing the given string."""
  playerName_not_contains: String

  """All values starting with the given string."""
  playerName_starts_with: String

  """All values not starting with the given string."""
  playerName_not_starts_with: String

  """All values ending with the given string."""
  playerName_ends_with: String

  """All values not ending with the given string."""
  playerName_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updateAt: DateTime

  """All values that are not equal to given value."""
  updateAt_not: DateTime

  """All values that are contained in given list."""
  updateAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updateAt_not_in: [DateTime!]

  """All values less than the given value."""
  updateAt_lt: DateTime

  """All values less than or equal the given value."""
  updateAt_lte: DateTime

  """All values greater than the given value."""
  updateAt_gt: DateTime

  """All values greater than or equal the given value."""
  updateAt_gte: DateTime
  game: GameWhereInput
}

input StatWhereUniqueInput {
  id: ID
}

type Subscription {
  player(where: PlayerSubscriptionWhereInput): PlayerSubscriptionPayload
  team(where: TeamSubscriptionWhereInput): TeamSubscriptionPayload
  game(where: GameSubscriptionWhereInput): GameSubscriptionPayload
  stat(where: StatSubscriptionWhereInput): StatSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
}

type Team implements Node {
  id: ID!
  city: String
  name: String!
  user: User!
  players(where: PlayerWhereInput, orderBy: PlayerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Player!]
  createdAt: DateTime
  updateAt: DateTime
}

"""A connection to a list of items."""
type TeamConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [TeamEdge]!
  aggregate: AggregateTeam!
}

input TeamCreateInput {
  id: ID
  city: String
  name: String!
  updateAt: DateTime
  user: UserCreateOneInput!
  players: PlayerCreateManyWithoutTeamInput
}

input TeamCreateOneWithoutPlayersInput {
  create: TeamCreateWithoutPlayersInput
  connect: TeamWhereUniqueInput
}

input TeamCreateWithoutPlayersInput {
  id: ID
  city: String
  name: String!
  updateAt: DateTime
  user: UserCreateOneInput!
}

"""An edge in a connection."""
type TeamEdge {
  """The item at the end of the edge."""
  node: Team!

  """A cursor for use in pagination."""
  cursor: String!
}

enum TeamOrderByInput {
  id_ASC
  id_DESC
  city_ASC
  city_DESC
  name_ASC
  name_DESC
  createdAt_ASC
  createdAt_DESC
  updateAt_ASC
  updateAt_DESC
}

type TeamPreviousValues {
  id: ID!
  city: String
  name: String!
  createdAt: DateTime
  updateAt: DateTime
}

type TeamSubscriptionPayload {
  mutation: MutationType!
  node: Team
  updatedFields: [String!]
  previousValues: TeamPreviousValues
}

input TeamSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [TeamSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [TeamSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TeamSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: TeamWhereInput
}

input TeamUpdateInput {
  city: String
  name: String
  updateAt: DateTime
  user: UserUpdateOneRequiredInput
  players: PlayerUpdateManyWithoutTeamInput
}

input TeamUpdateManyMutationInput {
  city: String
  name: String
  updateAt: DateTime
}

input TeamUpdateOneRequiredWithoutPlayersInput {
  create: TeamCreateWithoutPlayersInput
  connect: TeamWhereUniqueInput
  update: TeamUpdateWithoutPlayersDataInput
  upsert: TeamUpsertWithoutPlayersInput
}

input TeamUpdateWithoutPlayersDataInput {
  city: String
  name: String
  updateAt: DateTime
  user: UserUpdateOneRequiredInput
}

input TeamUpsertWithoutPlayersInput {
  update: TeamUpdateWithoutPlayersDataInput!
  create: TeamCreateWithoutPlayersInput!
}

input TeamWhereInput {
  """Logical AND on all given filters."""
  AND: [TeamWhereInput!]

  """Logical OR on all given filters."""
  OR: [TeamWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TeamWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  city: String

  """All values that are not equal to given value."""
  city_not: String

  """All values that are contained in given list."""
  city_in: [String!]

  """All values that are not contained in given list."""
  city_not_in: [String!]

  """All values less than the given value."""
  city_lt: String

  """All values less than or equal the given value."""
  city_lte: String

  """All values greater than the given value."""
  city_gt: String

  """All values greater than or equal the given value."""
  city_gte: String

  """All values containing the given string."""
  city_contains: String

  """All values not containing the given string."""
  city_not_contains: String

  """All values starting with the given string."""
  city_starts_with: String

  """All values not starting with the given string."""
  city_not_starts_with: String

  """All values ending with the given string."""
  city_ends_with: String

  """All values not ending with the given string."""
  city_not_ends_with: String
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updateAt: DateTime

  """All values that are not equal to given value."""
  updateAt_not: DateTime

  """All values that are contained in given list."""
  updateAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updateAt_not_in: [DateTime!]

  """All values less than the given value."""
  updateAt_lt: DateTime

  """All values less than or equal the given value."""
  updateAt_lte: DateTime

  """All values greater than the given value."""
  updateAt_gt: DateTime

  """All values greater than or equal the given value."""
  updateAt_gte: DateTime
  user: UserWhereInput
  players_every: PlayerWhereInput
  players_some: PlayerWhereInput
  players_none: PlayerWhereInput
}

input TeamWhereUniqueInput {
  id: ID
}

type User implements Node {
  id: ID!
  name: String!
  email: String!
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: [Permission!]!
}

"""A connection to a list of items."""
type UserConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  id: ID
  name: String!
  email: String!
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserCreatepermissionsInput
}

input UserCreateOneInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
}

input UserCreatepermissionsInput {
  set: [Permission!]
}

"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge."""
  node: User!

  """A cursor for use in pagination."""
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  resetToken_ASC
  resetToken_DESC
  resetTokenExpiry_ASC
  resetTokenExpiry_DESC
}

type UserPreviousValues {
  id: ID!
  name: String!
  email: String!
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: [Permission!]!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [UserSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateDataInput {
  name: String
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
}

input UserUpdateInput {
  name: String
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
}

input UserUpdateManyMutationInput {
  name: String
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
}

input UserUpdateOneInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateDataInput
  upsert: UserUpsertNestedInput
}

input UserUpdateOneRequiredInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
  update: UserUpdateDataInput
  upsert: UserUpsertNestedInput
}

input UserUpdatepermissionsInput {
  set: [Permission!]
}

input UserUpsertNestedInput {
  update: UserUpdateDataInput!
  create: UserCreateInput!
}

input UserWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  resetToken: String

  """All values that are not equal to given value."""
  resetToken_not: String

  """All values that are contained in given list."""
  resetToken_in: [String!]

  """All values that are not contained in given list."""
  resetToken_not_in: [String!]

  """All values less than the given value."""
  resetToken_lt: String

  """All values less than or equal the given value."""
  resetToken_lte: String

  """All values greater than the given value."""
  resetToken_gt: String

  """All values greater than or equal the given value."""
  resetToken_gte: String

  """All values containing the given string."""
  resetToken_contains: String

  """All values not containing the given string."""
  resetToken_not_contains: String

  """All values starting with the given string."""
  resetToken_starts_with: String

  """All values not starting with the given string."""
  resetToken_not_starts_with: String

  """All values ending with the given string."""
  resetToken_ends_with: String

  """All values not ending with the given string."""
  resetToken_not_ends_with: String
  resetTokenExpiry: Float

  """All values that are not equal to given value."""
  resetTokenExpiry_not: Float

  """All values that are contained in given list."""
  resetTokenExpiry_in: [Float!]

  """All values that are not contained in given list."""
  resetTokenExpiry_not_in: [Float!]

  """All values less than the given value."""
  resetTokenExpiry_lt: Float

  """All values less than or equal the given value."""
  resetTokenExpiry_lte: Float

  """All values greater than the given value."""
  resetTokenExpiry_gt: Float

  """All values greater than or equal the given value."""
  resetTokenExpiry_gte: Float
}

input UserWhereUniqueInput {
  id: ID
  email: String
}
